name: Automatic Update
run-name: Annotate new line in data files

on:
  workflow_dispatch: # allow manual trigger
  schedule:
    - cron: "45 23 * * *" # run at 23:45 every day (will pick the date of that day yet)

jobs:
  edit-and-upload-rain-data:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add new line
        run: |
          months=("ENERO" "FEBRERO" "MARZO" "ABRIL" "MAYO" "JUNIO" "JULIO" "AGOSTO" "SEPTIEMBRE" "OCTUBRE" "NOVIEMBRE" "DICIEMBRE")
          files=("src/data/pluviometro-1.txt") # TODO add pluviometro 2
          month=$(date +%-m)
          year=$(date +%Y)
          month_name=${months[$((month - 1))]}
          date=$(date +%d/%m/%Y)
          month_year_comment="# $month_name $year"
          default_rain_data_line="$(date +%d/%m/%Y);0"

          echo ""

          for file in "${files[@]}"
          do
              echo "Processing data file: $file"

              # check if it is first day of the month   AND   no '# MONTH YEAR' comment is already added
              if [[ "$(date +%d)" -eq 1 && ! $(grep "$month_year_comment" $file) ]]
              then
                # add the '# MONTH YEAR' comment and two white lines at line 3
                sed -i "3i $month_year_comment\\n" $file && echo "Comment month year added: $month_year_comment"
              fi
              
              if [[ ! $(grep -q $date $file) ]]
              then
                # if today is not already added then add default rain data line in line 4
                sed -i "4i $default_rain_data_line" $file
                echo "Default rain data line added: $default_rain_data_line"
                else
                # if today is already added just print the existing line
                echo "Found rain data line for today ($(grep -q $date $file)), skip addin it."
              fi

              echo ""
          done
      - name: Commit and push
        run: |
          git config --global user.name 'Github Action'
          git config --global user.email 'jaimemartinmartin15@users.noreply.github.com'
          git commit -am "Automatic update data files"
          git push
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          mask-aws-account-id: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-south-2
      - name: Upload files
        run: |
          aws --version
          aws s3 cp src/data/pluviometro-1.txt s3://lluvias.jaimeelingeniero.es/data/pluviometro-1.txt
          aws s3 cp src/data/pluviometro-2.txt s3://lluvias.jaimeelingeniero.es/data/pluviometro-2.txt
